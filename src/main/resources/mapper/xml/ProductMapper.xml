<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.grainoilsystem.mapper.ProductMapper">

    <resultMap id="BaseResultMap" type="org.example.grainoilsystem.entity.Product">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="type" property="type"/>
        <result column="image_url" property="imageUrl"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, name, type, image_url
    </sql>

    <select id="selectProductList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from products
        <where>
            <if test="type != null and type != ''">
                and type = #{type}
            </if>
            <if test="name != null and name != ''">
                and name like concat('%', #{name}, '%')
            </if>
        </where>
        <if test="offset != null and size != null">
            limit #{offset}, #{size}
        </if>
    </select>

    <select id="countProductList" resultType="java.lang.Integer">
        select count(*)
        from products
        <where>
            <if test="type != null and type != ''">
                and type = #{type}
            </if>
            <if test="name != null and name != ''">
                and name like concat('%', #{name}, '%')
            </if>
        </where>
    </select>

    <select id="selectProductById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from products
        where id = #{id}
    </select>

    <insert id="insertProduct" parameterType="org.example.grainoilsystem.entity.Product" useGeneratedKeys="true" keyProperty="id">
        insert into products (name, type, image_url)
        values (#{name}, #{type}, #{imageUrl})
    </insert>

    <update id="updateProduct" parameterType="org.example.grainoilsystem.entity.Product">
        update products
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="type != null">type = #{type},</if>
            <if test="imageUrl != null">image_url = #{imageUrl},</if>
        </set>
        where id = #{id}
    </update>

    <delete id="deleteProductById">
        delete from products where id = #{id}
    </delete>

    <select id="selectByNameType" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from products
        where name = #{name} and type = #{type}
        limit 1
    </select>
    
    <!-- 新增带商家信息的商品查询 -->
    <select id="selectProductListWithMerchant" resultType="map" parameterType="map">
        SELECT 
            p.id, p.name, p.type, p.image_url,
            pm.merchant_id, m.name as merchant_name, 
            pm.status, pm.current_price
        FROM 
            products p
        JOIN 
            product_merchants pm ON p.id = pm.product_id
        JOIN 
            merchants m ON pm.merchant_id = m.id
        <where>
            <if test="type != null and type != ''">
                AND p.type = #{type}
            </if>
            <if test="name != null and name != ''">
                AND p.name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="merchantId != null">
                AND pm.merchant_id = #{merchantId}
            </if>
            <if test="status != null">
                AND pm.status = #{status}
            </if>
        </where>
        ORDER BY p.id
        <if test="offset != null and size != null">
            LIMIT #{offset}, #{size}
        </if>
    </select>

    <select id="countProductListWithMerchant" resultType="java.lang.Integer" parameterType="map">
        SELECT 
            COUNT(*) 
        FROM 
            products p
        JOIN 
            product_merchants pm ON p.id = pm.product_id
        JOIN 
            merchants m ON pm.merchant_id = m.id
        <where>
            <if test="type != null and type != ''">
                AND p.type = #{type}
            </if>
            <if test="name != null and name != ''">
                AND p.name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="merchantId != null">
                AND pm.merchant_id = #{merchantId}
            </if>
            <if test="status != null">
                AND pm.status = #{status}
            </if>
        </where>
    </select>

    <!-- 新增获取所有商品类型的查询 -->
    <select id="selectAllTypes" resultType="string">
        SELECT DISTINCT type FROM products ORDER BY type
    </select>

    <!-- 新增根据类型获取商品ID的查询 -->
    <select id="selectProductIdsByType" resultType="integer">
        SELECT id FROM products WHERE type = #{type}
    </select>

</mapper> 